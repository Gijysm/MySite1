@page "/"
@using MySite.Components.Parser
@using MySite.Models
@inject IJSRuntime Js

<!DOCTYPE html>
<PageTitle>Home</PageTitle>
<link rel="stylesheet" href="/lib/bootstrap/dist/css/HomeBoard.css" />
<link rel="stylesheet" href="/lib/bootstrap/dist/css/Calendar.css" />
<script src="/lib/bootstrap/dist/js/Calendar.js" defer></script>

<header>
    <div class="user_container">
        <div class="profile_card">
            <div class="block_user_information">
                <h1 class="username">@MyIformation.Name<br/></h1>
                <img src="@MyIformation.Image" alt="@MyIformation.Name" style="width:150px; border-radius:50%;" class="img"/>
                <a class="date">@MyIformation.Created</a>
                <h2 class="fullname">@MyIformation.FullName</h2>
            </div>
            <div class="block_additional">
                <a>@MyIformation.Location</a>
                <a>@MyIformation.Bio</a>
                <a>@MyIformation.Public</a>
                <a>@MyIformation.Company</a>
            </div>
        </div>
    </div>
    <div class="progress-bar-container">
        <div class="progress-bar"
             @ref="progressBarRef"
             data-value="@ProgressPrecent.ToString("F2")"
             style="--progress:@ProgressPrecent.ToString("F2")">
        </div>
    </div>
    <div class="calendar-container">
        <h1 class="Calendar_text">Календар</h1>
        <div class="calendar">
            <header class="Calendar_header">
                <h3 class="Calendar_h3"></h3>
                <nav>
                    <button id="prev"></button>
                    <button id="next"></button>
                </nav>
            </header>
            <ul class="days">
                <li>Пон</li>
                <li>Вів</li>
                <li>Сер</li>
                <li>Чет</li>
                <li>П'ят</li>
                <li>Суб</li>
                <li>Нед</li>
            </ul>
            <ul class="dates"></ul>
        </div>
    </div>

</header>

<body></body>
<footer></footer>

@code {
    
    private int selectedYear;
    private int? Count_Repose;
    private double ProgressPrecent;
    private bool needsJsUpdate = false;

    private int[] years = Array.Empty<int>();
    private ElementReference progressBarRef;

    private bool _rendered = false;
    private int selectedIndex;

    private UserInfo MyIformation = new();
    private DateTime now = new DateTime(DateTime.Now.Year, 1, 1);
    private int DaysInYear = DateTime.IsLeapYear(DateTime.UtcNow.Year) ? 366 : 365;
    private double newProgressValue = 0.0;
    
    
    protected override async Task OnInitializedAsync()
    {
            selectedYear = now.Year;

            Count_Repose = await RepozServise.GetLaterRepose(now);
            if (Count_Repose.HasValue && DaysInYear > 0)
            {
                ProgressPrecent = ((double)Count_Repose.Value / DaysInYear) * 100;
                if (ProgressPrecent > 100) ProgressPrecent = 100;
            }

            List<(string, string, string, string, string, string, int, string)> Informations = await Git_parse.ParseInfoUser();
            if (Informations.Count > 0)
            {
                var info = Informations[0];
                MyIformation = new UserInfo
                {
                    Image = info.Item1,
                    Name = info.Item2,
                    FullName = info.Item3,
                    Location = info.Item4,
                    Created = info.Item5,
                    Bio = info.Item6,
                    Public = info.Item7,
                    Company = info.Item8
                };

                if (DateTime.TryParse(MyIformation.Created, out DateTime createdDate))
                {
                    int startYear = 2022;
                    int currentYear = DateTime.Now.Year;
                    years = Enumerable.Range(startYear, currentYear - startYear + 1).ToArray();
                    selectedIndex = years.Length - 1;
                }
            }
                

        StateHasChanged();
        
    }

    private void LogMessage(string message)
    {
        // Використовуємо UTF-8 кодування для коректного відображення кирилиці
        Console.OutputEncoding = System.Text.Encoding.UTF8;
        Console.WriteLine(message);
    }
}