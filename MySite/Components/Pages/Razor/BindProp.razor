@page "/Razor/bindprop"
@using System.IO
@using MySite.Components.Parser
@using MySite.Models
@inject IWebHostEnvironment Environment
<!DOCTYPE html>
<link rel="stylesheet" href="/lib/bootstrap/dist/css/bootstrap.min.css" />
<link rel="stylesheet" href="/lib/bootstrap/dist/css/site.css" />
<link rel="stylesheet" href="/lib/bootstrap/dist/css/animated-gradient-header.css" />
<header>
    <div style="position: relative; overflow: hidden; height: 60px; width: 100%;">
        <div class="anim_back"></div>
        <h1 class="animated-background-header" style="position: relative; z-index: 1;">
            My Repos
        </h1>
    </div>
</header>

<body>
<ul class="product-container">
    @foreach (var product in products)
    {
        <div class="product">
            @product.Name<br/>
            @if (product._image is not null)
            {
                <NavLink class="nav-link" href=@($"/Razor/Repoz_Info_Page/{product.Number}")>
                    <img class="product_img" src="data:image/jpeg;base64,@Convert.ToBase64String(File.ReadAllBytes(product._image))"/>
                </NavLink>
            }
            <b font size="5" class="product_info" face="Times New Roman">
                <a class="description">@product.Description</a><br/>
                <a href="@product.Id" target="_blank" class="ID">@product.Id</a>
                <a class="Time">@product.Time</a><br/>
            </b>
        </div>
    }
</ul>
</body>
<footer>
    
</footer>
@code {
    private List<Models.Product>? products = new();

    protected override async Task OnInitializedAsync()
    {
        List<(string, string, string, string)> links = await Git_parse.ParseRepos();
        if (links.Count > 0)
        {
            int i = 0;
            foreach (var (name, link, time, description) in links)
            {
                var product = new Models.Product
                {
                    _image = "C:\\Users\\popka\\OneDrive\\Зображення\\ole_shu_poster_for_twitch_in_cyberpunk_and_fantasy_style_b0ca07b8-f342-4cbd-96bf-cdd72eba7146.png",
                    IsPublic = true,
                    Name = name,
                    Number = i,
                    Description = description,
                    Id = link,
                    Time = time,
                };
                RepozServise.Repozes.Add(product);
                products.Add(product);
                i++;
            }
        }
        else
        {
            products.Add(new Models.Product
            {
                _image = "",
                IsPublic = true,
                Name = "ERROR",
                Id = "ERROR",
                Time = "ERROR",
            });
        }
    }

}